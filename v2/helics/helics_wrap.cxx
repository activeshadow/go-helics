/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: helics.i

#define SWIGMODULE helics

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include "helics/shared_api_library/ValueFederate.h"
#include "helics/shared_api_library/MessageFederate.h"
#include "helics/shared_api_library/MessageFilters.h"

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_helics_a0cc12ab44967999(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_helics_a0cc12ab44967999(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_default_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_default;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_zmq_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_zmq;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_mpi_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_mpi;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_test_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_test;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_interprocess_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_interprocess;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_ipc_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_ipc;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_tcp_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_tcp;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_udp_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_udp;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_zmq_test_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_zmq_test;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_nng_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_nng;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_tcp_ss_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_tcp_ss;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_http_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_http;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_websocket_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_websocket;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_inproc_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_inproc;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_core_type_null_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_core_type_null;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_string_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_string;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_double_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_double;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_int_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_int;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_complex_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_complex;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_vector_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_vector;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_complex_vector_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_complex_vector;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_named_point_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_named_point;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_boolean_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_boolean;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_time_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_time;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_raw_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_raw;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_multi_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_multi;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_data_type_any_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_data_type_any;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_observer_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_observer;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_uninterruptible_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_uninterruptible;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_interruptible_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_interruptible;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_source_only_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_source_only;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_only_transmit_on_change_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_only_transmit_on_change;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_only_update_on_change_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_only_update_on_change;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_wait_for_current_time_update_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_wait_for_current_time_update;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_restrictive_time_policy_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_restrictive_time_policy;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_rollback_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_rollback;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_forward_compute_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_forward_compute;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_realtime_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_realtime;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_single_thread_federate_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_single_thread_federate;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_ignore_time_mismatch_warnings_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_ignore_time_mismatch_warnings;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_strict_config_checking_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_strict_config_checking;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_event_triggered_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_event_triggered;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_delay_init_entry_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_delay_init_entry;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_enable_init_entry_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_enable_init_entry;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_slow_responding_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_slow_responding;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_debugging_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_debugging;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_terminate_on_error_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_terminate_on_error;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_force_logging_flush_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_force_logging_flush;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_flag_dumplog_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_flag_dumplog;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_no_print_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_no_print;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_error_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_error;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_warning_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_warning;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_summary_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_summary;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_connections_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_connections;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_interfaces_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_interfaces;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_timing_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_timing;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_data_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_data;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_log_level_trace_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_log_level_trace;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_fatal_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_fatal;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_external_type_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_external_type;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_other_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_other;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_insufficient_space_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_insufficient_space;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_execution_failure_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_execution_failure;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_invalid_function_call_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_invalid_function_call;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_invalid_state_transition_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_invalid_state_transition;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_warning_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_warning;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_system_failure_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_system_failure;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_discard_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_discard;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_invalid_argument_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_invalid_argument;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_invalid_object_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_invalid_object;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_connection_failure_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_connection_failure;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_error_registration_failure_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_error_registration_failure;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_ok_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_ok;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_delta_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_delta;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_period_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_period;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_offset_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_offset;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_rt_lag_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_rt_lag;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_rt_lead_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_rt_lead;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_rt_tolerance_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_rt_tolerance;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_input_delay_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_input_delay;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_time_output_delay_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_time_output_delay;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_int_max_iterations_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_int_max_iterations;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_int_log_level_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_int_log_level;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_int_file_log_level_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_int_file_log_level;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_property_int_console_log_level_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_property_int_console_log_level;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_no_op_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_no_op;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_vectorize_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_vectorize_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_and_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_and_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_or_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_or_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_sum_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_sum_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_diff_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_diff_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_max_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_max_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_min_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_min_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_multi_input_average_operation_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_multi_input_average_operation;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_connection_required_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_connection_required;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_connection_optional_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_connection_optional;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_single_connection_only_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_single_connection_only;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_multiple_connections_allowed_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_multiple_connections_allowed;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_buffer_data_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_buffer_data;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_strict_type_checking_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_strict_type_checking;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_ignore_unit_mismatch_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_ignore_unit_mismatch;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_only_transmit_on_change_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_only_transmit_on_change;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_only_update_on_change_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_only_update_on_change;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_ignore_interrupts_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_ignore_interrupts;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_multi_input_handling_method_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_multi_input_handling_method;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_input_priority_location_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_input_priority_location;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_clear_priority_list_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_clear_priority_list;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_handle_option_connections_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_handle_option_connections;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_custom_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_custom;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_delay_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_delay;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_random_delay_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_random_delay;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_random_drop_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_random_drop;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_reroute_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_reroute;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_clone_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_clone;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_filter_type_firewall_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_filter_type_firewall;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_sequencing_mode_fast_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_sequencing_mode_fast;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_sequencing_mode_ordered_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_sequencing_mode_ordered;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helics_time_zero_get_helics_a0cc12ab44967999() {
  helics_time result;
  double _swig_go_result;
  
  
  result = (helics_time)(helics_time)helics_time_zero;
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helics_time_epsilon_get_helics_a0cc12ab44967999() {
  helics_time result;
  double _swig_go_result;
  
  
  result = (helics_time)(helics_time)helics_time_epsilon;
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helics_time_invalid_get_helics_a0cc12ab44967999() {
  helics_time result;
  double _swig_go_result;
  
  
  result = (helics_time)(helics_time)helics_time_invalid;
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helics_time_maxtime_get_helics_a0cc12ab44967999() {
  helics_time result;
  double _swig_go_result;
  
  
  result = (helics_time)(helics_time)helics_time_maxtime;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_true_get_helics_a0cc12ab44967999() {
  helics_bool result;
  intgo _swig_go_result;
  
  
  result = (helics_bool)(helics_bool)helics_true;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_false_get_helics_a0cc12ab44967999() {
  helics_bool result;
  intgo _swig_go_result;
  
  
  result = (helics_bool)(helics_bool)helics_false;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_request_no_iteration_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_request_no_iteration;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_request_force_iteration_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_request_force_iteration;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_request_iterate_if_needed_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_request_iterate_if_needed;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_result_next_step_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_result_next_step;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_result_error_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_result_error;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_result_halted_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_result_halted;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_iteration_result_iterating_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_iteration_result_iterating;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_startup_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_startup;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_initialization_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_initialization;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_execution_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_execution;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_finalize_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_finalize;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_error_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_error;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_pending_init_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_pending_init;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_pending_exec_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_pending_exec;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_pending_time_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_pending_time;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_pending_iterative_time_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_pending_iterative_time;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_pending_finalize_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_pending_finalize;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helics_state_finished_helics_a0cc12ab44967999() {
  int result;
  intgo _swig_go_result;
  
  
  result = helics_state_finished;
  
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helics_complex_real_set_helics_a0cc12ab44967999(helics_complex *_swig_go_0, double _swig_go_1) {
  helics_complex *arg1 = (helics_complex *) 0 ;
  double arg2 ;
  
  arg1 = *(helics_complex **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->real = arg2;
  
}


double _wrap_helics_complex_real_get_helics_a0cc12ab44967999(helics_complex *_swig_go_0) {
  helics_complex *arg1 = (helics_complex *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(helics_complex **)&_swig_go_0; 
  
  result = (double) ((arg1)->real);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helics_complex_imag_set_helics_a0cc12ab44967999(helics_complex *_swig_go_0, double _swig_go_1) {
  helics_complex *arg1 = (helics_complex *) 0 ;
  double arg2 ;
  
  arg1 = *(helics_complex **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->imag = arg2;
  
}


double _wrap_helics_complex_imag_get_helics_a0cc12ab44967999(helics_complex *_swig_go_0) {
  helics_complex *arg1 = (helics_complex *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(helics_complex **)&_swig_go_0; 
  
  result = (double) ((arg1)->imag);
  _swig_go_result = result; 
  return _swig_go_result;
}


helics_complex *_wrap_new_helics_complex_helics_a0cc12ab44967999() {
  helics_complex *result = 0 ;
  helics_complex *_swig_go_result;
  
  
  result = (helics_complex *)new helics_complex();
  *(helics_complex **)&_swig_go_result = (helics_complex *)result; 
  return _swig_go_result;
}


void _wrap_delete_helics_complex_helics_a0cc12ab44967999(helics_complex *_swig_go_0) {
  helics_complex *arg1 = (helics_complex *) 0 ;
  
  arg1 = *(helics_complex **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_helics_message_time_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, double _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  helics_time arg2 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  
  if (arg1) (arg1)->time = arg2;
  
}


double _wrap_helics_message_time_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result = (helics_time) ((arg1)->time);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helics_message_data_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, _gostring_ _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->data = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->data, (const char *)arg2);
    } else {
      arg1->data = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_helics_message_data_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result = (char *) ((arg1)->data);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helics_message_length_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, long long _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  int64_t arg2 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  arg2 = (int64_t)_swig_go_1; 
  
  if (arg1) (arg1)->length = arg2;
  
}


long long _wrap_helics_message_length_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  int64_t result;
  long long _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result =  ((arg1)->length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helics_message_messageID_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, int32_t *_swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->messageID = arg2;
  
}


int32_t *_wrap_helics_message_messageID_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result =  ((arg1)->messageID);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_helics_message_flags_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, int16_t *_swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  int16_t arg2 ;
  int16_t *argp2 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  argp2 = (int16_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int16_t");
  }
  arg2 = (int16_t)*argp2;
  
  
  if (arg1) (arg1)->flags = arg2;
  
}


int16_t *_wrap_helics_message_flags_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  int16_t result;
  int16_t *_swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result =  ((arg1)->flags);
  *(int16_t **)&_swig_go_result = new int16_t(result); 
  return _swig_go_result;
}


void _wrap_helics_message_original_source_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, _gostring_ _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->original_source = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->original_source, (const char *)arg2);
    } else {
      arg1->original_source = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_helics_message_original_source_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result = (char *) ((arg1)->original_source);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helics_message_source_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, _gostring_ _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->source = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->source, (const char *)arg2);
    } else {
      arg1->source = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_helics_message_source_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result = (char *) ((arg1)->source);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helics_message_dest_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, _gostring_ _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->dest = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->dest, (const char *)arg2);
    } else {
      arg1->dest = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_helics_message_dest_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result = (char *) ((arg1)->dest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helics_message_original_dest_set_helics_a0cc12ab44967999(helics_message *_swig_go_0, _gostring_ _swig_go_1) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->original_dest = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->original_dest, (const char *)arg2);
    } else {
      arg1->original_dest = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_helics_message_original_dest_get_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  result = (char *) ((arg1)->original_dest);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


helics_message *_wrap_new_helics_message_helics_a0cc12ab44967999() {
  helics_message *result = 0 ;
  helics_message *_swig_go_result;
  
  
  result = (helics_message *)new helics_message();
  *(helics_message **)&_swig_go_result = (helics_message *)result; 
  return _swig_go_result;
}


void _wrap_delete_helics_message_helics_a0cc12ab44967999(helics_message *_swig_go_0) {
  helics_message *arg1 = (helics_message *) 0 ;
  
  arg1 = *(helics_message **)&_swig_go_0; 
  
  delete arg1;
  
}


_gostring_ _wrap_helicsGetVersion_helics_a0cc12ab44967999() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)helicsGetVersion();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsGetBuildFlags_helics_a0cc12ab44967999() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)helicsGetBuildFlags();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsGetCompilerVersion_helics_a0cc12ab44967999() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)helicsGetCompilerVersion();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_helicsIsCoreTypeAvailable_helics_a0cc12ab44967999(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (helics_bool)helicsIsCoreTypeAvailable((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


helics_core _wrap_helicsCreateCore_helics_a0cc12ab44967999(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_core result;
  helics_core _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_core)helicsCreateCore((char const *)arg1,(char const *)arg2,(char const *)arg3,arg4);
  *(helics_core *)&_swig_go_result = (helics_core)result; 
  free(arg1); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


helics_core _wrap_helicsCreateCoreFromArgs_helics_a0cc12ab44967999(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3, helics_error *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_core result;
  helics_core _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_core)helicsCreateCoreFromArgs((char const *)arg1,(char const *)arg2,arg3,(char const *const *)arg4,arg5);
  *(helics_core *)&_swig_go_result = (helics_core)result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


helics_core _wrap_helicsCoreClone_helics_a0cc12ab44967999(helics_core _swig_go_0, helics_error *_swig_go_1) {
  helics_core arg1 = (helics_core) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_core result;
  helics_core _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_core)helicsCoreClone(arg1,arg2);
  *(helics_core *)&_swig_go_result = (helics_core)result; 
  return _swig_go_result;
}


intgo _wrap_helicsCoreIsValid_helics_a0cc12ab44967999(helics_core _swig_go_0) {
  helics_core arg1 = (helics_core) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  result = (helics_bool)helicsCoreIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


helics_broker _wrap_helicsCreateBroker_helics_a0cc12ab44967999(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_broker result;
  helics_broker _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_broker)helicsCreateBroker((char const *)arg1,(char const *)arg2,(char const *)arg3,arg4);
  *(helics_broker *)&_swig_go_result = (helics_broker)result; 
  free(arg1); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


helics_broker _wrap_helicsCreateBrokerFromArgs_helics_a0cc12ab44967999(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3, helics_error *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char **arg4 = (char **) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_broker result;
  helics_broker _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_broker)helicsCreateBrokerFromArgs((char const *)arg1,(char const *)arg2,arg3,(char const *const *)arg4,arg5);
  *(helics_broker *)&_swig_go_result = (helics_broker)result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


helics_broker _wrap_helicsBrokerClone_helics_a0cc12ab44967999(helics_broker _swig_go_0, helics_error *_swig_go_1) {
  helics_broker arg1 = (helics_broker) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_broker result;
  helics_broker _swig_go_result;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_broker)helicsBrokerClone(arg1,arg2);
  *(helics_broker *)&_swig_go_result = (helics_broker)result; 
  return _swig_go_result;
}


intgo _wrap_helicsBrokerIsValid_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  result = (helics_bool)helicsBrokerIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsBrokerIsConnected_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  result = (helics_bool)helicsBrokerIsConnected(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsBrokerDataLink_helics_a0cc12ab44967999(helics_broker _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsBrokerDataLink(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsBrokerAddSourceFilterToEndpoint_helics_a0cc12ab44967999(helics_broker _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsBrokerAddSourceFilterToEndpoint(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsBrokerAddDestinationFilterToEndpoint_helics_a0cc12ab44967999(helics_broker _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsBrokerAddDestinationFilterToEndpoint(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsBrokerMakeConnections_helics_a0cc12ab44967999(helics_broker _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsBrokerMakeConnections(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsCoreWaitForDisconnect_helics_a0cc12ab44967999(helics_core _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_core arg1 = (helics_core) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_bool)helicsCoreWaitForDisconnect(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsBrokerWaitForDisconnect_helics_a0cc12ab44967999(helics_broker _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_broker arg1 = (helics_broker) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_bool)helicsBrokerWaitForDisconnect(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsCoreIsConnected_helics_a0cc12ab44967999(helics_core _swig_go_0) {
  helics_core arg1 = (helics_core) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  result = (helics_bool)helicsCoreIsConnected(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsCoreDataLink_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsCoreDataLink(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsCoreAddSourceFilterToEndpoint_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsCoreAddSourceFilterToEndpoint(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsCoreAddDestinationFilterToEndpoint_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsCoreAddDestinationFilterToEndpoint(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsCoreMakeConnections_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsCoreMakeConnections(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


_gostring_ _wrap_helicsBrokerGetIdentifier_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  result = (char *)helicsBrokerGetIdentifier(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsCoreGetIdentifier_helics_a0cc12ab44967999(helics_core _swig_go_0) {
  helics_core arg1 = (helics_core) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  result = (char *)helicsCoreGetIdentifier(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsBrokerGetAddress_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  result = (char *)helicsBrokerGetAddress(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsCoreGetAddress_helics_a0cc12ab44967999(helics_core _swig_go_0) {
  helics_core arg1 = (helics_core) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  result = (char *)helicsCoreGetAddress(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsCoreSetReadyToInit_helics_a0cc12ab44967999(helics_core _swig_go_0, helics_error *_swig_go_1) {
  helics_core arg1 = (helics_core) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsCoreSetReadyToInit(arg1,arg2);
  
}


intgo _wrap_helicsCoreConnect_helics_a0cc12ab44967999(helics_core _swig_go_0, helics_error *_swig_go_1) {
  helics_core arg1 = (helics_core) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_bool)helicsCoreConnect(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsCoreDisconnect_helics_a0cc12ab44967999(helics_core _swig_go_0, helics_error *_swig_go_1) {
  helics_core arg1 = (helics_core) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsCoreDisconnect(arg1,arg2);
  
}


helics_federate _wrap_helicsGetFederateByName_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_error *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate)helicsGetFederateByName((char const *)arg1,arg2);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_helicsBrokerDisconnect_helics_a0cc12ab44967999(helics_broker _swig_go_0, helics_error *_swig_go_1) {
  helics_broker arg1 = (helics_broker) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsBrokerDisconnect(arg1,arg2);
  
}


void _wrap_helicsFederateDestroy_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  helicsFederateDestroy(arg1);
  
}


void _wrap_helicsBrokerDestroy_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  helicsBrokerDestroy(arg1);
  
}


void _wrap_helicsCoreDestroy_helics_a0cc12ab44967999(helics_core _swig_go_0) {
  helics_core arg1 = (helics_core) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  helicsCoreDestroy(arg1);
  
}


void _wrap_helicsCoreFree_helics_a0cc12ab44967999(helics_core _swig_go_0) {
  helics_core arg1 = (helics_core) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  helicsCoreFree(arg1);
  
}


void _wrap_helicsBrokerFree_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  helicsBrokerFree(arg1);
  
}


helics_federate _wrap_helicsCreateValueFederate_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_federate_info _swig_go_1, helics_error *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  helics_federate_info arg2 = (helics_federate_info) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_federate_info *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_federate)helicsCreateValueFederate((char const *)arg1,arg2,arg3);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


helics_federate _wrap_helicsCreateValueFederateFromConfig_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_error *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate)helicsCreateValueFederateFromConfig((char const *)arg1,arg2);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


helics_federate _wrap_helicsCreateMessageFederate_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_federate_info _swig_go_1, helics_error *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  helics_federate_info arg2 = (helics_federate_info) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_federate_info *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_federate)helicsCreateMessageFederate((char const *)arg1,arg2,arg3);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


helics_federate _wrap_helicsCreateMessageFederateFromConfig_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_error *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate)helicsCreateMessageFederateFromConfig((char const *)arg1,arg2);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


helics_federate _wrap_helicsCreateCombinationFederate_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_federate_info _swig_go_1, helics_error *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  helics_federate_info arg2 = (helics_federate_info) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_federate_info *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_federate)helicsCreateCombinationFederate((char const *)arg1,arg2,arg3);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


helics_federate _wrap_helicsCreateCombinationFederateFromConfig_helics_a0cc12ab44967999(_gostring_ _swig_go_0, helics_error *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate)helicsCreateCombinationFederateFromConfig((char const *)arg1,arg2);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  free(arg1); 
  return _swig_go_result;
}


helics_federate _wrap_helicsFederateClone_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate result;
  helics_federate _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate)helicsFederateClone(arg1,arg2);
  *(helics_federate *)&_swig_go_result = (helics_federate)result; 
  return _swig_go_result;
}


helics_federate_info _wrap_helicsCreateFederateInfo_helics_a0cc12ab44967999() {
  helics_federate_info result;
  helics_federate_info _swig_go_result;
  
  
  result = (helics_federate_info)helicsCreateFederateInfo();
  *(helics_federate_info *)&_swig_go_result = (helics_federate_info)result; 
  return _swig_go_result;
}


helics_federate_info _wrap_helicsFederateInfoClone_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, helics_error *_swig_go_1) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate_info result;
  helics_federate_info _swig_go_result;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate_info)helicsFederateInfoClone(arg1,arg2);
  *(helics_federate_info *)&_swig_go_result = (helics_federate_info)result; 
  return _swig_go_result;
}


void _wrap_helicsFederateInfoLoadFromArgs_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, intgo _swig_go_1, _gostring_* _swig_go_2, helics_error *_swig_go_3) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  int arg2 ;
  char **arg3 = (char **) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateInfoLoadFromArgs(arg1,arg2,(char const *const *)arg3,arg4);
  
}


void _wrap_helicsFederateInfoFree_helics_a0cc12ab44967999(helics_federate_info _swig_go_0) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  helicsFederateInfoFree(arg1);
  
}


intgo _wrap_helicsFederateIsValid_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (helics_bool)helicsFederateIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsFederateInfoSetCoreName_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetCoreName(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateInfoSetCoreInitString_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetCoreInitString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateInfoSetBrokerInitString_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetBrokerInitString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateInfoSetCoreType_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetCoreType(arg1,arg2,arg3);
  
}


void _wrap_helicsFederateInfoSetCoreTypeFromString_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetCoreTypeFromString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateInfoSetBroker_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetBroker(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateInfoSetBrokerKey_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetBrokerKey(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateInfoSetBrokerPort_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetBrokerPort(arg1,arg2,arg3);
  
}


void _wrap_helicsFederateInfoSetLocalPort_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetLocalPort(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsGetPropertyIndex_helics_a0cc12ab44967999(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (int)helicsGetPropertyIndex((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


intgo _wrap_helicsGetFlagIndex_helics_a0cc12ab44967999(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (int)helicsGetFlagIndex((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


intgo _wrap_helicsGetOptionIndex_helics_a0cc12ab44967999(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (int)helicsGetOptionIndex((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


intgo _wrap_helicsGetOptionValue_helics_a0cc12ab44967999(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (int)helicsGetOptionValue((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_helicsFederateInfoSetFlagOption_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  int arg2 ;
  helics_bool arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (helics_bool)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateInfoSetFlagOption(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsFederateInfoSetSeparator_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, char _swig_go_1, helics_error *_swig_go_2) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  char arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateInfoSetSeparator(arg1,arg2,arg3);
  
}


void _wrap_helicsFederateInfoSetTimeProperty_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, intgo _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  int arg2 ;
  helics_time arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (helics_time)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateInfoSetTimeProperty(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsFederateInfoSetIntegerProperty_helics_a0cc12ab44967999(helics_federate_info _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_federate_info arg1 = (helics_federate_info) 0 ;
  int arg2 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate_info *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateInfoSetIntegerProperty(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsFederateRegisterInterfaces_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateRegisterInterfaces(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateGlobalError_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  helicsFederateGlobalError(arg1,arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_helicsFederateLocalError_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  helicsFederateLocalError(arg1,arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_helicsFederateFinalize_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateFinalize(arg1,arg2);
  
}


void _wrap_helicsFederateFinalizeAsync_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateFinalizeAsync(arg1,arg2);
  
}


void _wrap_helicsFederateFinalizeComplete_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateFinalizeComplete(arg1,arg2);
  
}


void _wrap_helicsFederateFree_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  helicsFederateFree(arg1);
  
}


void _wrap_helicsCloseLibrary_helics_a0cc12ab44967999() {
  helicsCloseLibrary();
  
}


void _wrap_helicsFederateEnterInitializingMode_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateEnterInitializingMode(arg1,arg2);
  
}


void _wrap_helicsFederateEnterInitializingModeAsync_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateEnterInitializingModeAsync(arg1,arg2);
  
}


intgo _wrap_helicsFederateIsAsyncOperationCompleted_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_bool)helicsFederateIsAsyncOperationCompleted(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsFederateEnterInitializingModeComplete_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateEnterInitializingModeComplete(arg1,arg2);
  
}


void _wrap_helicsFederateEnterExecutingMode_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateEnterExecutingMode(arg1,arg2);
  
}


void _wrap_helicsFederateEnterExecutingModeAsync_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateEnterExecutingModeAsync(arg1,arg2);
  
}


void _wrap_helicsFederateEnterExecutingModeComplete_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsFederateEnterExecutingModeComplete(arg1,arg2);
  
}


intgo _wrap_helicsFederateEnterExecutingModeIterative_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_iteration_request arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_iteration_result result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_iteration_request)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_iteration_result)helicsFederateEnterExecutingModeIterative(arg1,arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_helicsFederateEnterExecutingModeIterativeAsync_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_iteration_request arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_iteration_request)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateEnterExecutingModeIterativeAsync(arg1,arg2,arg3);
  
}


intgo _wrap_helicsFederateEnterExecutingModeIterativeComplete_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_iteration_result result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_iteration_result)helicsFederateEnterExecutingModeIterativeComplete(arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_helicsFederateGetState_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_federate_state result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_federate_state)helicsFederateGetState(arg1,arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


helics_core _wrap_helicsFederateGetCoreObject_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_core result;
  helics_core _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_core)helicsFederateGetCoreObject(arg1,arg2);
  *(helics_core *)&_swig_go_result = (helics_core)result; 
  return _swig_go_result;
}


double _wrap_helicsFederateRequestTime_helics_a0cc12ab44967999(helics_federate _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_time)helicsFederateRequestTime(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsFederateRequestTimeAdvance_helics_a0cc12ab44967999(helics_federate _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_time)helicsFederateRequestTimeAdvance(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsFederateRequestNextStep_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_time)helicsFederateRequestNextStep(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsFederateRequestTimeIterative_helics_a0cc12ab44967999(helics_federate _swig_go_0, double _swig_go_1, intgo _swig_go_2, _goslice_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_time arg2 ;
  helics_iteration_request arg3 ;
  helics_iteration_result *arg4 = (helics_iteration_result *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_iteration_result temp4 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = (helics_iteration_request)_swig_go_2; 
  {
    if (_swig_go_3.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg4 = &temp4;
  }
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_time)helicsFederateRequestTimeIterative(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  {
    int* a = (int *) _swig_go_3.array;
    a[0] = temp4;
  }
  
  return _swig_go_result;
}


void _wrap_helicsFederateRequestTimeAsync_helics_a0cc12ab44967999(helics_federate _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateRequestTimeAsync(arg1,arg2,arg3);
  
}


double _wrap_helicsFederateRequestTimeComplete_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_time)helicsFederateRequestTimeComplete(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsFederateRequestTimeIterativeAsync_helics_a0cc12ab44967999(helics_federate _swig_go_0, double _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_time arg2 ;
  helics_iteration_request arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = (helics_iteration_request)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateRequestTimeIterativeAsync(arg1,arg2,arg3,arg4);
  
}


double _wrap_helicsFederateRequestTimeIterativeComplete_helics_a0cc12ab44967999(helics_federate _swig_go_0, _goslice_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_iteration_result *arg2 = (helics_iteration_result *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_iteration_result temp2 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  {
    if (_swig_go_1.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg2 = &temp2;
  }
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_time)helicsFederateRequestTimeIterativeComplete(arg1,arg2,arg3);
  _swig_go_result = result; 
  {
    int* a = (int *) _swig_go_1.array;
    a[0] = temp2;
  }
  
  return _swig_go_result;
}


_gostring_ _wrap_helicsFederateGetName_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (char *)helicsFederateGetName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsFederateSetTimeProperty_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_time arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (helics_time)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateSetTimeProperty(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsFederateSetFlagOption_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_bool arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (helics_bool)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateSetFlagOption(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsFederateSetSeparator_helics_a0cc12ab44967999(helics_federate _swig_go_0, char _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateSetSeparator(arg1,arg2,arg3);
  
}


void _wrap_helicsFederateSetIntegerProperty_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateSetIntegerProperty(arg1,arg2,arg3,arg4);
  
}


double _wrap_helicsFederateGetTimeProperty_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_time)helicsFederateGetTimeProperty(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsFederateGetFlagOption_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_bool)helicsFederateGetFlagOption(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsFederateGetIntegerProperty_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (int)helicsFederateGetIntegerProperty(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsFederateGetCurrentTime_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_time)helicsFederateGetCurrentTime(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsFederateSetGlobal_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateSetGlobal(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsFederateAddDependency_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateAddDependency(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateSetLogFile_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateSetLogFile(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateLogErrorMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateLogErrorMessage(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateLogWarningMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateLogWarningMessage(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateLogInfoMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateLogInfoMessage(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateLogDebugMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateLogDebugMessage(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederateLogLevelMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFederateLogLevelMessage(arg1,arg2,(char const *)arg3,arg4);
  
  free(arg3); 
}


void _wrap_helicsCoreSetGlobal_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsCoreSetGlobal(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsBrokerSetGlobal_helics_a0cc12ab44967999(helics_broker _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsBrokerSetGlobal(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsCoreSetLogFile_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsCoreSetLogFile(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsBrokerSetLogFile_helics_a0cc12ab44967999(helics_broker _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_broker arg1 = (helics_broker) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsBrokerSetLogFile(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsBrokerSetTimeBarrier_helics_a0cc12ab44967999(helics_broker _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_broker arg1 = (helics_broker) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsBrokerSetTimeBarrier(arg1,arg2,arg3);
  
}


void _wrap_helicsBrokerClearTimeBarrier_helics_a0cc12ab44967999(helics_broker _swig_go_0) {
  helics_broker arg1 = (helics_broker) 0 ;
  
  arg1 = *(helics_broker *)&_swig_go_0; 
  
  helicsBrokerClearTimeBarrier(arg1);
  
}


helics_query _wrap_helicsCreateQuery_helics_a0cc12ab44967999(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  helics_query result;
  helics_query _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (helics_query)helicsCreateQuery((char const *)arg1,(char const *)arg2);
  *(helics_query *)&_swig_go_result = (helics_query)result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsQueryExecute_helics_a0cc12ab44967999(helics_query _swig_go_0, helics_federate _swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  helics_federate arg2 = (helics_federate) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  arg2 = *(helics_federate *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (char *)helicsQueryExecute(arg1,arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsQueryCoreExecute_helics_a0cc12ab44967999(helics_query _swig_go_0, helics_core _swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  helics_core arg2 = (helics_core) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  arg2 = *(helics_core *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (char *)helicsQueryCoreExecute(arg1,arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsQueryBrokerExecute_helics_a0cc12ab44967999(helics_query _swig_go_0, helics_broker _swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  helics_broker arg2 = (helics_broker) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  arg2 = *(helics_broker *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (char *)helicsQueryBrokerExecute(arg1,arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsQueryExecuteAsync_helics_a0cc12ab44967999(helics_query _swig_go_0, helics_federate _swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  helics_federate arg2 = (helics_federate) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  arg2 = *(helics_federate *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsQueryExecuteAsync(arg1,arg2,arg3);
  
}


_gostring_ _wrap_helicsQueryExecuteComplete_helics_a0cc12ab44967999(helics_query _swig_go_0, helics_error *_swig_go_1) {
  helics_query arg1 = (helics_query) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (char *)helicsQueryExecuteComplete(arg1,arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_helicsQueryIsCompleted_helics_a0cc12ab44967999(helics_query _swig_go_0) {
  helics_query arg1 = (helics_query) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  
  result = (helics_bool)helicsQueryIsCompleted(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsQuerySetTarget_helics_a0cc12ab44967999(helics_query _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsQuerySetTarget(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsQuerySetQueryString_helics_a0cc12ab44967999(helics_query _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsQuerySetQueryString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsQuerySetOrdering_helics_a0cc12ab44967999(helics_query _swig_go_0, int32_t *_swig_go_1, helics_error *_swig_go_2) {
  helics_query arg1 = (helics_query) 0 ;
  int32_t arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  int32_t *argp2 ;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsQuerySetOrdering(arg1,arg2,arg3);
  
}


void _wrap_helicsQueryFree_helics_a0cc12ab44967999(helics_query _swig_go_0) {
  helics_query arg1 = (helics_query) 0 ;
  
  arg1 = *(helics_query *)&_swig_go_0; 
  
  helicsQueryFree(arg1);
  
}


void _wrap_helicsCleanupLibrary_helics_a0cc12ab44967999() {
  helicsCleanupLibrary();
  
}


helics_input _wrap_helicsFederateRegisterSubscription_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_input result;
  helics_input _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_input)helicsFederateRegisterSubscription(arg1,(char const *)arg2,(char const *)arg3,arg4);
  *(helics_input *)&_swig_go_result = (helics_input)result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateRegisterPublication_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_data_type arg3 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (helics_data_type)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_publication)helicsFederateRegisterPublication(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  free(arg4); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateRegisterTypePublication_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_publication)helicsFederateRegisterTypePublication(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateRegisterGlobalPublication_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_data_type arg3 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (helics_data_type)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_publication)helicsFederateRegisterGlobalPublication(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  free(arg4); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateRegisterGlobalTypePublication_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_publication)helicsFederateRegisterGlobalTypePublication(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


helics_input _wrap_helicsFederateRegisterInput_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_data_type arg3 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_input result;
  helics_input _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (helics_data_type)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_input)helicsFederateRegisterInput(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5);
  *(helics_input *)&_swig_go_result = (helics_input)result; 
  free(arg2); 
  free(arg4); 
  return _swig_go_result;
}


helics_input _wrap_helicsFederateRegisterTypeInput_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_input result;
  helics_input _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_input)helicsFederateRegisterTypeInput(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  *(helics_input *)&_swig_go_result = (helics_input)result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateRegisterGlobalInput_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_data_type arg3 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (helics_data_type)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_publication)helicsFederateRegisterGlobalInput(arg1,(char const *)arg2,arg3,(char const *)arg4,arg5);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  free(arg4); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateRegisterGlobalTypeInput_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, helics_error *_swig_go_4) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = *(helics_error **)&_swig_go_4; 
  
  result = (helics_publication)helicsFederateRegisterGlobalTypeInput(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateGetPublication_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_publication)helicsFederateGetPublication(arg1,(char const *)arg2,arg3);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  free(arg2); 
  return _swig_go_result;
}


helics_publication _wrap_helicsFederateGetPublicationByIndex_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_publication result;
  helics_publication _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_publication)helicsFederateGetPublicationByIndex(arg1,arg2,arg3);
  *(helics_publication *)&_swig_go_result = (helics_publication)result; 
  return _swig_go_result;
}


helics_input _wrap_helicsFederateGetInput_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_input result;
  helics_input _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_input)helicsFederateGetInput(arg1,(char const *)arg2,arg3);
  *(helics_input *)&_swig_go_result = (helics_input)result; 
  free(arg2); 
  return _swig_go_result;
}


helics_input _wrap_helicsFederateGetInputByIndex_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_input result;
  helics_input _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_input)helicsFederateGetInputByIndex(arg1,arg2,arg3);
  *(helics_input *)&_swig_go_result = (helics_input)result; 
  return _swig_go_result;
}


helics_input _wrap_helicsFederateGetSubscription_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_input result;
  helics_input _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_input)helicsFederateGetSubscription(arg1,(char const *)arg2,arg3);
  *(helics_input *)&_swig_go_result = (helics_input)result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_helicsFederateClearUpdates_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  helicsFederateClearUpdates(arg1);
  
}


void _wrap_helicsFederateRegisterFromPublicationJSON_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederateRegisterFromPublicationJSON(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFederatePublishJSON_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFederatePublishJSON(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsPublicationIsValid_helics_a0cc12ab44967999(helics_publication _swig_go_0) {
  helics_publication arg1 = (helics_publication) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  result = (helics_bool)helicsPublicationIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsPublicationPublishRaw_helics_a0cc12ab44967999(helics_publication _swig_go_0, void *_swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_publication arg1 = (helics_publication) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsPublicationPublishRaw(arg1,(void const *)arg2,arg3,arg4);
  
}


void _wrap_helicsPublicationPublishString_helics_a0cc12ab44967999(helics_publication _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationPublishString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsPublicationPublishInteger_helics_a0cc12ab44967999(helics_publication _swig_go_0, long long _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  int64_t arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (int64_t)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationPublishInteger(arg1,arg2,arg3);
  
}


void _wrap_helicsPublicationPublishBoolean_helics_a0cc12ab44967999(helics_publication _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  helics_bool arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (helics_bool)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationPublishBoolean(arg1,arg2,arg3);
  
}


void _wrap_helicsPublicationPublishDouble_helics_a0cc12ab44967999(helics_publication _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  double arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationPublishDouble(arg1,arg2,arg3);
  
}


void _wrap_helicsPublicationPublishTime_helics_a0cc12ab44967999(helics_publication _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationPublishTime(arg1,arg2,arg3);
  
}


void _wrap_helicsPublicationPublishChar_helics_a0cc12ab44967999(helics_publication _swig_go_0, char _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  char arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationPublishChar(arg1,arg2,arg3);
  
}


void _wrap_helicsPublicationPublishComplex_helics_a0cc12ab44967999(helics_publication _swig_go_0, double _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_publication arg1 = (helics_publication) 0 ;
  double arg2 ;
  double arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsPublicationPublishComplex(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsPublicationPublishVector_helics_a0cc12ab44967999(helics_publication _swig_go_0, _goslice_ _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_publication arg1 = (helics_publication) 0 ;
  double *arg2 = (double *) 0 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  double temp2 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  {
    if (_swig_go_1.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg2 = &temp2;
  }
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsPublicationPublishVector(arg1,(double const *)arg2,arg3,arg4);
  
  {
    double* a = (double *) _swig_go_1.array;
    a[0] = temp2;
  }
  
}


void _wrap_helicsPublicationPublishNamedPoint_helics_a0cc12ab44967999(helics_publication _swig_go_0, _gostring_ _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (double)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsPublicationPublishNamedPoint(arg1,(char const *)arg2,arg3,arg4);
  
  free(arg2); 
}


void _wrap_helicsPublicationAddTarget_helics_a0cc12ab44967999(helics_publication _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationAddTarget(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsInputIsValid_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (helics_bool)helicsInputIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsInputAddTarget_helics_a0cc12ab44967999(helics_input _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputAddTarget(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsInputGetRawValueSize_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (int)helicsInputGetRawValueSize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsInputGetRawValue_helics_a0cc12ab44967999(helics_input _swig_go_0, void *_swig_go_1, intgo _swig_go_2, _goslice_ _swig_go_3, helics_error *_swig_go_4) {
  helics_input arg1 = (helics_input) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  int temp4 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  {
    if (_swig_go_3.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg4 = &temp4;
  }
  arg5 = *(helics_error **)&_swig_go_4; 
  
  helicsInputGetRawValue(arg1,arg2,arg3,arg4,arg5);
  
  {
    int* a = (int *) _swig_go_3.array;
    a[0] = temp4;
  }
  
}


intgo _wrap_helicsInputGetStringSize_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (int)helicsInputGetStringSize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsInputGetString_helics_a0cc12ab44967999(helics_input _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _goslice_ _swig_go_3, helics_error *_swig_go_4) {
  helics_input arg1 = (helics_input) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  int temp4 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  {
    if (_swig_go_3.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg4 = &temp4;
  }
  arg5 = *(helics_error **)&_swig_go_4; 
  
  helicsInputGetString(arg1,arg2,arg3,arg4,arg5);
  
  {
    int* a = (int *) _swig_go_3.array;
    a[0] = temp4;
  }
  free(arg2); 
  
}


long long _wrap_helicsInputGetInteger_helics_a0cc12ab44967999(helics_input _swig_go_0, helics_error *_swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  int64_t result;
  long long _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = helicsInputGetInteger(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsInputGetBoolean_helics_a0cc12ab44967999(helics_input _swig_go_0, helics_error *_swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_bool)helicsInputGetBoolean(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsInputGetDouble_helics_a0cc12ab44967999(helics_input _swig_go_0, helics_error *_swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (double)helicsInputGetDouble(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsInputGetTime_helics_a0cc12ab44967999(helics_input _swig_go_0, helics_error *_swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_time)helicsInputGetTime(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


char _wrap_helicsInputGetChar_helics_a0cc12ab44967999(helics_input _swig_go_0, helics_error *_swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (char)helicsInputGetChar(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


helics_complex *_wrap_helicsInputGetComplexObject_helics_a0cc12ab44967999(helics_input _swig_go_0, helics_error *_swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_complex result;
  helics_complex *_swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = helicsInputGetComplexObject(arg1,arg2);
  *(helics_complex **)&_swig_go_result = new helics_complex(result); 
  return _swig_go_result;
}


void _wrap_helicsInputGetComplex_helics_a0cc12ab44967999(helics_input _swig_go_0, _goslice_ _swig_go_1, _goslice_ _swig_go_2, helics_error *_swig_go_3) {
  helics_input arg1 = (helics_input) 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  double temp2 ;
  double temp3 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  {
    if (_swig_go_1.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg2 = &temp2;
  }
  {
    if (_swig_go_2.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg3 = &temp3;
  }
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsInputGetComplex(arg1,arg2,arg3,arg4);
  
  {
    double* a = (double *) _swig_go_1.array;
    a[0] = temp2;
  }
  {
    double* a = (double *) _swig_go_2.array;
    a[0] = temp3;
  }
  
  
}


intgo _wrap_helicsInputGetVectorSize_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (int)helicsInputGetVectorSize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsInputGetVector_helics_a0cc12ab44967999(helics_input _swig_go_0, _goslice_ _swig_go_1, intgo _swig_go_2, _goslice_ _swig_go_3, helics_error *_swig_go_4) {
  helics_input arg1 = (helics_input) 0 ;
  double *arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  int temp4 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  {
    if (_swig_go_3.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg4 = &temp4;
  }
  arg5 = *(helics_error **)&_swig_go_4; 
  
  helicsInputGetVector(arg1,arg2,arg3,arg4,arg5);
  
  {
    int* a = (int *) _swig_go_3.array;
    a[0] = temp4;
  }
  
}


void _wrap_helicsInputGetNamedPoint_helics_a0cc12ab44967999(helics_input _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _goslice_ _swig_go_3, _goslice_ _swig_go_4, helics_error *_swig_go_5) {
  helics_input arg1 = (helics_input) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  double *arg5 = (double *) 0 ;
  helics_error *arg6 = (helics_error *) 0 ;
  int temp4 ;
  double temp5 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  {
    if (_swig_go_3.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg4 = &temp4;
  }
  {
    if (_swig_go_4.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg5 = &temp5;
  }
  arg6 = *(helics_error **)&_swig_go_5; 
  
  helicsInputGetNamedPoint(arg1,arg2,arg3,arg4,arg5,arg6);
  
  {
    int* a = (int *) _swig_go_3.array;
    a[0] = temp4;
  }
  {
    double* a = (double *) _swig_go_4.array;
    a[0] = temp5;
  }
  free(arg2); 
  
  
}


void _wrap_helicsInputSetDefaultRaw_helics_a0cc12ab44967999(helics_input _swig_go_0, void *_swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_input arg1 = (helics_input) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsInputSetDefaultRaw(arg1,(void const *)arg2,arg3,arg4);
  
}


void _wrap_helicsInputSetDefaultString_helics_a0cc12ab44967999(helics_input _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetDefaultString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsInputSetDefaultInteger_helics_a0cc12ab44967999(helics_input _swig_go_0, long long _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  int64_t arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (int64_t)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetDefaultInteger(arg1,arg2,arg3);
  
}


void _wrap_helicsInputSetDefaultBoolean_helics_a0cc12ab44967999(helics_input _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  helics_bool arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (helics_bool)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetDefaultBoolean(arg1,arg2,arg3);
  
}


void _wrap_helicsInputSetDefaultTime_helics_a0cc12ab44967999(helics_input _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetDefaultTime(arg1,arg2,arg3);
  
}


void _wrap_helicsInputSetDefaultChar_helics_a0cc12ab44967999(helics_input _swig_go_0, char _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  char arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetDefaultChar(arg1,arg2,arg3);
  
}


void _wrap_helicsInputSetDefaultDouble_helics_a0cc12ab44967999(helics_input _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  double arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetDefaultDouble(arg1,arg2,arg3);
  
}


void _wrap_helicsInputSetDefaultComplex_helics_a0cc12ab44967999(helics_input _swig_go_0, double _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_input arg1 = (helics_input) 0 ;
  double arg2 ;
  double arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsInputSetDefaultComplex(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsInputSetDefaultVector_helics_a0cc12ab44967999(helics_input _swig_go_0, _goslice_ _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_input arg1 = (helics_input) 0 ;
  double *arg2 = (double *) 0 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  double temp2 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  {
    if (_swig_go_1.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg2 = &temp2;
  }
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsInputSetDefaultVector(arg1,(double const *)arg2,arg3,arg4);
  
  {
    double* a = (double *) _swig_go_1.array;
    a[0] = temp2;
  }
  
}


void _wrap_helicsInputSetDefaultNamedPoint_helics_a0cc12ab44967999(helics_input _swig_go_0, _gostring_ _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_input arg1 = (helics_input) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (double)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsInputSetDefaultNamedPoint(arg1,(char const *)arg2,arg3,arg4);
  
  free(arg2); 
}


_gostring_ _wrap_helicsInputGetType_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetType(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsInputGetPublicationType_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetPublicationType(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsPublicationGetType_helics_a0cc12ab44967999(helics_publication _swig_go_0) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  result = (char *)helicsPublicationGetType(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsInputGetKey_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetKey(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsSubscriptionGetKey_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsSubscriptionGetKey(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsPublicationGetKey_helics_a0cc12ab44967999(helics_publication _swig_go_0) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  result = (char *)helicsPublicationGetKey(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsInputGetUnits_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetUnits(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsInputGetInjectionUnits_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetInjectionUnits(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsInputGetExtractionUnits_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetExtractionUnits(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsPublicationGetUnits_helics_a0cc12ab44967999(helics_publication _swig_go_0) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  result = (char *)helicsPublicationGetUnits(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsInputGetInfo_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (char *)helicsInputGetInfo(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsInputSetInfo_helics_a0cc12ab44967999(helics_input _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetInfo(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


_gostring_ _wrap_helicsPublicationGetInfo_helics_a0cc12ab44967999(helics_publication _swig_go_0) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  result = (char *)helicsPublicationGetInfo(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsPublicationSetInfo_helics_a0cc12ab44967999(helics_publication _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationSetInfo(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsInputGetOption_helics_a0cc12ab44967999(helics_input _swig_go_0, intgo _swig_go_1) {
  helics_input arg1 = (helics_input) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)helicsInputGetOption(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsInputSetOption_helics_a0cc12ab44967999(helics_input _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_input arg1 = (helics_input) 0 ;
  int arg2 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsInputSetOption(arg1,arg2,arg3,arg4);
  
}


intgo _wrap_helicsPublicationGetOption_helics_a0cc12ab44967999(helics_publication _swig_go_0, intgo _swig_go_1) {
  helics_publication arg1 = (helics_publication) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)helicsPublicationGetOption(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsPublicationSetOption_helics_a0cc12ab44967999(helics_publication _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_publication arg1 = (helics_publication) 0 ;
  int arg2 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsPublicationSetOption(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsPublicationSetMinimumChange_helics_a0cc12ab44967999(helics_publication _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_publication arg1 = (helics_publication) 0 ;
  double arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_publication *)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsPublicationSetMinimumChange(arg1,arg2,arg3);
  
}


void _wrap_helicsInputSetMinimumChange_helics_a0cc12ab44967999(helics_input _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_input arg1 = (helics_input) 0 ;
  double arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsInputSetMinimumChange(arg1,arg2,arg3);
  
}


intgo _wrap_helicsInputIsUpdated_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (helics_bool)helicsInputIsUpdated(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_helicsInputLastUpdateTime_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  result = (helics_time)helicsInputLastUpdateTime(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsInputClearUpdate_helics_a0cc12ab44967999(helics_input _swig_go_0) {
  helics_input arg1 = (helics_input) 0 ;
  
  arg1 = *(helics_input *)&_swig_go_0; 
  
  helicsInputClearUpdate(arg1);
  
}


intgo _wrap_helicsFederateGetPublicationCount_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (int)helicsFederateGetPublicationCount(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsFederateGetInputCount_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (int)helicsFederateGetInputCount(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


helics_endpoint _wrap_helicsFederateRegisterEndpoint_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_endpoint result;
  helics_endpoint _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_endpoint)helicsFederateRegisterEndpoint(arg1,(char const *)arg2,(char const *)arg3,arg4);
  *(helics_endpoint *)&_swig_go_result = (helics_endpoint)result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


helics_endpoint _wrap_helicsFederateRegisterGlobalEndpoint_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_endpoint result;
  helics_endpoint _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_endpoint)helicsFederateRegisterGlobalEndpoint(arg1,(char const *)arg2,(char const *)arg3,arg4);
  *(helics_endpoint *)&_swig_go_result = (helics_endpoint)result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


helics_endpoint _wrap_helicsFederateGetEndpoint_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_endpoint result;
  helics_endpoint _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_endpoint)helicsFederateGetEndpoint(arg1,(char const *)arg2,arg3);
  *(helics_endpoint *)&_swig_go_result = (helics_endpoint)result; 
  free(arg2); 
  return _swig_go_result;
}


helics_endpoint _wrap_helicsFederateGetEndpointByIndex_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_endpoint result;
  helics_endpoint _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_endpoint)helicsFederateGetEndpointByIndex(arg1,arg2,arg3);
  *(helics_endpoint *)&_swig_go_result = (helics_endpoint)result; 
  return _swig_go_result;
}


intgo _wrap_helicsEndpointIsValid_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (helics_bool)helicsEndpointIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsEndpointSetDefaultDestination_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsEndpointSetDefaultDestination(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


_gostring_ _wrap_helicsEndpointGetDefaultDestination_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (char *)helicsEndpointGetDefaultDestination(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsEndpointSendMessageRaw_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2, intgo _swig_go_3, helics_error *_swig_go_4) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  helics_error *arg5 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(helics_error **)&_swig_go_4; 
  
  helicsEndpointSendMessageRaw(arg1,(char const *)arg2,(void const *)arg3,arg4,arg5);
  
  free(arg2); 
}


void _wrap_helicsEndpointSendEventRaw_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2, intgo _swig_go_3, double _swig_go_4, helics_error *_swig_go_5) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  helics_time arg5 ;
  helics_error *arg6 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (helics_time)_swig_go_4; 
  arg6 = *(helics_error **)&_swig_go_5; 
  
  helicsEndpointSendEventRaw(arg1,(char const *)arg2,(void const *)arg3,arg4,arg5,arg6);
  
  free(arg2); 
}


void _wrap_helicsEndpointSendMessage_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, helics_message *_swig_go_1, helics_error *_swig_go_2) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_message *arg2 = (helics_message *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  arg2 = *(helics_message **)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsEndpointSendMessage(arg1,arg2,arg3);
  
}


void _wrap_helicsEndpointSendMessageObject_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, helics_message_object _swig_go_1, helics_error *_swig_go_2) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_message_object arg2 = (helics_message_object) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  arg2 = *(helics_message_object *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsEndpointSendMessageObject(arg1,arg2,arg3);
  
}


void _wrap_helicsEndpointSendMessageObjectZeroCopy_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, helics_message_object _swig_go_1, helics_error *_swig_go_2) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_message_object arg2 = (helics_message_object) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  arg2 = *(helics_message_object *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsEndpointSendMessageObjectZeroCopy(arg1,arg2,arg3);
  
}


void _wrap_helicsEndpointSubscribe_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsEndpointSubscribe(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_helicsFederateHasMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (helics_bool)helicsFederateHasMessage(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsEndpointHasMessage_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (helics_bool)helicsEndpointHasMessage(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsFederatePendingMessages_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (int)helicsFederatePendingMessages(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsEndpointPendingMessages_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (int)helicsEndpointPendingMessages(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


helics_message *_wrap_helicsEndpointGetMessage_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_message result;
  helics_message *_swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = helicsEndpointGetMessage(arg1);
  *(helics_message **)&_swig_go_result = new helics_message(result); 
  return _swig_go_result;
}


helics_message_object _wrap_helicsEndpointGetMessageObject_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_message_object result;
  helics_message_object _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (helics_message_object)helicsEndpointGetMessageObject(arg1);
  *(helics_message_object *)&_swig_go_result = (helics_message_object)result; 
  return _swig_go_result;
}


helics_message_object _wrap_helicsEndpointCreateMessageObject_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, helics_error *_swig_go_1) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_message_object result;
  helics_message_object _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_message_object)helicsEndpointCreateMessageObject(arg1,arg2);
  *(helics_message_object *)&_swig_go_result = (helics_message_object)result; 
  return _swig_go_result;
}


helics_message *_wrap_helicsFederateGetMessage_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_message result;
  helics_message *_swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = helicsFederateGetMessage(arg1);
  *(helics_message **)&_swig_go_result = new helics_message(result); 
  return _swig_go_result;
}


helics_message_object _wrap_helicsFederateGetMessageObject_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_message_object result;
  helics_message_object _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (helics_message_object)helicsFederateGetMessageObject(arg1);
  *(helics_message_object *)&_swig_go_result = (helics_message_object)result; 
  return _swig_go_result;
}


helics_message_object _wrap_helicsFederateCreateMessageObject_helics_a0cc12ab44967999(helics_federate _swig_go_0, helics_error *_swig_go_1) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_message_object result;
  helics_message_object _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_message_object)helicsFederateCreateMessageObject(arg1,arg2);
  *(helics_message_object *)&_swig_go_result = (helics_message_object)result; 
  return _swig_go_result;
}


void _wrap_helicsFederateClearMessages_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  helicsFederateClearMessages(arg1);
  
}


void _wrap_helicsEndpointClearMessages_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  helicsEndpointClearMessages(arg1);
  
}


_gostring_ _wrap_helicsEndpointGetType_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (char *)helicsEndpointGetType(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsEndpointGetName_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (char *)helicsEndpointGetName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_helicsFederateGetEndpointCount_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (int)helicsFederateGetEndpointCount(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_helicsEndpointGetInfo_helics_a0cc12ab44967999(helics_endpoint _swig_go_0) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  result = (char *)helicsEndpointGetInfo(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsEndpointSetInfo_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsEndpointSetInfo(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsEndpointSetOption_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  int arg2 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsEndpointSetOption(arg1,arg2,arg3,arg4);
  
}


intgo _wrap_helicsEndpointGetOption_helics_a0cc12ab44967999(helics_endpoint _swig_go_0, intgo _swig_go_1) {
  helics_endpoint arg1 = (helics_endpoint) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_endpoint *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)helicsEndpointGetOption(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_helicsMessageGetSource_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (char *)helicsMessageGetSource(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsMessageGetDestination_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (char *)helicsMessageGetDestination(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsMessageGetOriginalSource_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (char *)helicsMessageGetOriginalSource(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_helicsMessageGetOriginalDestination_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (char *)helicsMessageGetOriginalDestination(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


double _wrap_helicsMessageGetTime_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  helics_time result;
  double _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (helics_time)helicsMessageGetTime(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_helicsMessageGetString_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (char *)helicsMessageGetString(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_helicsMessageGetMessageID_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (int)helicsMessageGetMessageID(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsMessageCheckFlag_helics_a0cc12ab44967999(helics_message_object _swig_go_0, intgo _swig_go_1) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  int arg2 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (helics_bool)helicsMessageCheckFlag(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_helicsMessageGetRawDataSize_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (int)helicsMessageGetRawDataSize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsMessageGetRawData_helics_a0cc12ab44967999(helics_message_object _swig_go_0, void *_swig_go_1, intgo _swig_go_2, _goslice_ _swig_go_3, helics_error *_swig_go_4) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  helics_error *arg5 = (helics_error *) 0 ;
  int temp4 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  {
    if (_swig_go_3.len == 0) {
      _swig_gopanic("array must contain at least 1 element");
    }
    arg4 = &temp4;
  }
  arg5 = *(helics_error **)&_swig_go_4; 
  
  helicsMessageGetRawData(arg1,arg2,arg3,arg4,arg5);
  
  {
    int* a = (int *) _swig_go_3.array;
    a[0] = temp4;
  }
  
}


intgo _wrap_helicsMessageIsValid_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  result = (helics_bool)helicsMessageIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_helicsMessageSetSource_helics_a0cc12ab44967999(helics_message_object _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetSource(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsMessageSetDestination_helics_a0cc12ab44967999(helics_message_object _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetDestination(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsMessageSetOriginalSource_helics_a0cc12ab44967999(helics_message_object _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetOriginalSource(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsMessageSetOriginalDestination_helics_a0cc12ab44967999(helics_message_object _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetOriginalDestination(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsMessageSetTime_helics_a0cc12ab44967999(helics_message_object _swig_go_0, double _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  helics_time arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = (helics_time)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetTime(arg1,arg2,arg3);
  
}


void _wrap_helicsMessageReserve_helics_a0cc12ab44967999(helics_message_object _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageReserve(arg1,arg2,arg3);
  
}


void _wrap_helicsMessageSetMessageID_helics_a0cc12ab44967999(helics_message_object _swig_go_0, int32_t *_swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  int32_t arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  int32_t *argp2 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetMessageID(arg1,arg2,arg3);
  
}


void _wrap_helicsMessageClearFlags_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  helicsMessageClearFlags(arg1);
  
}


void _wrap_helicsMessageSetFlagOption_helics_a0cc12ab44967999(helics_message_object _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  int arg2 ;
  helics_bool arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (helics_bool)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsMessageSetFlagOption(arg1,arg2,arg3,arg4);
  
}


void _wrap_helicsMessageSetString_helics_a0cc12ab44967999(helics_message_object _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageSetString(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsMessageSetData_helics_a0cc12ab44967999(helics_message_object _swig_go_0, void *_swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsMessageSetData(arg1,(void const *)arg2,arg3,arg4);
  
}


void _wrap_helicsMessageAppendData_helics_a0cc12ab44967999(helics_message_object _swig_go_0, void *_swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsMessageAppendData(arg1,(void const *)arg2,arg3,arg4);
  
}


void _wrap_helicsMessageCopy_helics_a0cc12ab44967999(helics_message_object _swig_go_0, helics_message_object _swig_go_1, helics_error *_swig_go_2) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  helics_message_object arg2 = (helics_message_object) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = *(helics_message_object *)&_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsMessageCopy(arg1,arg2,arg3);
  
}


helics_message_object _wrap_helicsMessageClone_helics_a0cc12ab44967999(helics_message_object _swig_go_0, helics_error *_swig_go_1) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  helics_message_object result;
  helics_message_object _swig_go_result;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  result = (helics_message_object)helicsMessageClone(arg1,arg2);
  *(helics_message_object *)&_swig_go_result = (helics_message_object)result; 
  return _swig_go_result;
}


void _wrap_helicsMessageFree_helics_a0cc12ab44967999(helics_message_object _swig_go_0) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  
  helicsMessageFree(arg1);
  
}


void _wrap_helicsMessageClear_helics_a0cc12ab44967999(helics_message_object _swig_go_0, helics_error *_swig_go_1) {
  helics_message_object arg1 = (helics_message_object) 0 ;
  helics_error *arg2 = (helics_error *) 0 ;
  
  arg1 = *(helics_message_object *)&_swig_go_0; 
  arg2 = *(helics_error **)&_swig_go_1; 
  
  helicsMessageClear(arg1,arg2);
  
}


helics_filter _wrap_helicsFederateRegisterFilter_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_filter_type arg2 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_filter_type)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_filter)helicsFederateRegisterFilter(arg1,arg2,(char const *)arg3,arg4);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg3); 
  return _swig_go_result;
}


helics_filter _wrap_helicsFederateRegisterGlobalFilter_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_federate arg1 = (helics_federate) 0 ;
  helics_filter_type arg2 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (helics_filter_type)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_filter)helicsFederateRegisterGlobalFilter(arg1,arg2,(char const *)arg3,arg4);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg3); 
  return _swig_go_result;
}


helics_filter _wrap_helicsFederateRegisterCloningFilter_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_filter)helicsFederateRegisterCloningFilter(arg1,(char const *)arg2,arg3);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg2); 
  return _swig_go_result;
}


helics_filter _wrap_helicsFederateRegisterGlobalCloningFilter_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_filter)helicsFederateRegisterGlobalCloningFilter(arg1,(char const *)arg2,arg3);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg2); 
  return _swig_go_result;
}


helics_filter _wrap_helicsCoreRegisterFilter_helics_a0cc12ab44967999(helics_core _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_core arg1 = (helics_core) 0 ;
  helics_filter_type arg2 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  arg2 = (helics_filter_type)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  result = (helics_filter)helicsCoreRegisterFilter(arg1,arg2,(char const *)arg3,arg4);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg3); 
  return _swig_go_result;
}


helics_filter _wrap_helicsCoreRegisterCloningFilter_helics_a0cc12ab44967999(helics_core _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_core arg1 = (helics_core) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_core *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_filter)helicsCoreRegisterCloningFilter(arg1,(char const *)arg2,arg3);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_helicsFederateGetFilterCount_helics_a0cc12ab44967999(helics_federate _swig_go_0) {
  helics_federate arg1 = (helics_federate) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  result = (int)helicsFederateGetFilterCount(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


helics_filter _wrap_helicsFederateGetFilter_helics_a0cc12ab44967999(helics_federate _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_filter)helicsFederateGetFilter(arg1,(char const *)arg2,arg3);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  free(arg2); 
  return _swig_go_result;
}


helics_filter _wrap_helicsFederateGetFilterByIndex_helics_a0cc12ab44967999(helics_federate _swig_go_0, intgo _swig_go_1, helics_error *_swig_go_2) {
  helics_federate arg1 = (helics_federate) 0 ;
  int arg2 ;
  helics_error *arg3 = (helics_error *) 0 ;
  helics_filter result;
  helics_filter _swig_go_result;
  
  arg1 = *(helics_federate *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(helics_error **)&_swig_go_2; 
  
  result = (helics_filter)helicsFederateGetFilterByIndex(arg1,arg2,arg3);
  *(helics_filter *)&_swig_go_result = (helics_filter)result; 
  return _swig_go_result;
}


intgo _wrap_helicsFilterIsValid_helics_a0cc12ab44967999(helics_filter _swig_go_0) {
  helics_filter arg1 = (helics_filter) 0 ;
  helics_bool result;
  intgo _swig_go_result;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  result = (helics_bool)helicsFilterIsValid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_helicsFilterGetName_helics_a0cc12ab44967999(helics_filter _swig_go_0) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  result = (char *)helicsFilterGetName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsFilterSet_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, double _swig_go_2, helics_error *_swig_go_3) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (double)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFilterSet(arg1,(char const *)arg2,arg3,arg4);
  
  free(arg2); 
}


void _wrap_helicsFilterSetString_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, helics_error *_swig_go_3) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFilterSetString(arg1,(char const *)arg2,(char const *)arg3,arg4);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_helicsFilterAddDestinationTarget_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFilterAddDestinationTarget(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFilterAddSourceTarget_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFilterAddSourceTarget(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFilterAddDeliveryEndpoint_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFilterAddDeliveryEndpoint(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFilterRemoveTarget_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFilterRemoveTarget(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFilterRemoveDeliveryEndpoint_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFilterRemoveDeliveryEndpoint(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


_gostring_ _wrap_helicsFilterGetInfo_helics_a0cc12ab44967999(helics_filter _swig_go_0) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  result = (char *)helicsFilterGetInfo(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_helicsFilterSetInfo_helics_a0cc12ab44967999(helics_filter _swig_go_0, _gostring_ _swig_go_1, helics_error *_swig_go_2) {
  helics_filter arg1 = (helics_filter) 0 ;
  char *arg2 = (char *) 0 ;
  helics_error *arg3 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(helics_error **)&_swig_go_2; 
  
  helicsFilterSetInfo(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_helicsFilterSetOption_helics_a0cc12ab44967999(helics_filter _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, helics_error *_swig_go_3) {
  helics_filter arg1 = (helics_filter) 0 ;
  int arg2 ;
  int arg3 ;
  helics_error *arg4 = (helics_error *) 0 ;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(helics_error **)&_swig_go_3; 
  
  helicsFilterSetOption(arg1,arg2,arg3,arg4);
  
}


intgo _wrap_helicsFilterGetOption_helics_a0cc12ab44967999(helics_filter _swig_go_0, intgo _swig_go_1) {
  helics_filter arg1 = (helics_filter) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(helics_filter *)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)helicsFilterGetOption(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

